@model List<IceShopWeb.Models.Order>
@{
    ViewData["Title"] = "Get Order History";
    Layout = "_Layout";
    var orders = Model;
    
}
<div class="text-center">

    <h1>Order History at @ViewData["LocationName"]</h1>

    <h4>Sort orders...</h4>
    <div>
        <button class="btn btn-primary text-white float-none" onclick="location.href='@Url.Action("GetLocationOrderHistory", "Manager",new { sortBy = 0 })'">
            By Date Placed, descending.
        </button>
        <button class="btn btn-primary text-white float-none" onclick="location.href='@Url.Action("GetLocationOrderHistory", "Manager",new { sortBy = 1 })'">
            By Date Placed, ascending.
        </button>
    </div>
    <div>
        <button class="btn btn-primary text-white float-none" onclick="location.href='@Url.Action("GetLocationOrderHistory", "Manager",new { sortBy = 2 })'">
            By Price, descending.
        </button>
        <button class="btn btn-primary text-white float-none" onclick="location.href='@Url.Action("GetLocationOrderHistory", "Manager",new { sortBy = 3 })'">
            By Price, ascending.
        </button>
    </div>
    @*
        @Html.ActionLink("By Date Placed, descending.", "GetLocationOrderHistory", "Manager", new { sortBy = 0 })
        @Html.ActionLink("By Date Placed, ascending.", "GetLocationOrderHistory", "Manager", new { sortBy = 1 })
        @Html.ActionLink("By Price, descending.", "GetLocationOrderHistory", "Manager", new { sortBy = 2 })
        @Html.ActionLink("By Price, ascending.", "GetLocationOrderHistory", "Manager", new { sortBy = 3 })*@

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().Location)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Subtotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Address)
                </th>
                <th>
                    @*Html.DisplayNameFor(model => model.First().TimeOrderWasPlaced)*@Date Placed
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var order in orders)
                {
                    // I manually add the customer as a model here, rather than the Model, which is a collection of customers.
                    // I need only one, not a list.

                    @await Html.PartialAsync($"_OrderInfoInTableRow", order);
                }
            }

        </tbody>
    </table>


</div>
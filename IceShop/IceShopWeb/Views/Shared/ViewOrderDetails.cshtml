@model List<OrderLineItem>
@{
    ViewData["Title"] = "Get Order History";
    Layout = "_Layout";
    var orderLineItems = Model;
    
}



<div class="text-center">

    <h1>Products in Order</h1>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().Product.Name)
                </th>
                <th>
                    Product Type
                    @*Html.DisplayNameFor(model => model.First().Product.TypeOfProductAsString)*@
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Product.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Product.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().ProductQuantity)
                </th>
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var oli in orderLineItems)
                {
                    // I manually add the customer as a model here, rather than the Model, which is a collection of customers.
                    // I need only one, not a list.

                    @await Html.PartialAsync($"_OrderLineItemInfoInTableRow", oli);
                }
            }

        </tbody>
    </table>


</div>